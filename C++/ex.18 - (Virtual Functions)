#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class Person{
    public:
    virtual void getdata()=0;
    virtual void putdata()=0;
    };
    
    class Professor:public Person {
        private:
        string nome;
        int pub, idade, cur_id;
        static int id;

        
        public:
        void getdata()override{
           cin>>nome>>idade>>pub;
           cur_id = id++;
        }
        
        void putdata()override{
            cout<<nome<<" "<<idade<<" "<<pub<<" "<<cur_id<<endl;
        }
    };
    
    int Professor::id = 1;
    
    class Student : public Person{
        private:
        string nome;
        int soma_marks=0, idade, cur_id;
        static int id;
        vector<int> marks;
        
        public:
        void getdata()override{
            cin>>nome>>idade;
            marks.resize(6);
            for(int i=0; i<6 ;i++){
                cin>>marks[i];
                soma_marks = soma_marks + marks[i];
            }
            cur_id = id++;
        }
        
        void putdata()override{
            cout<<nome<<" "<<idade<<" "<<soma_marks<<" "<<cur_id<<endl;
        }
        
    };
    
    int Student::id=1;
    
int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
